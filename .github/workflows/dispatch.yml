name: 📦 Build and Bundle Python App

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository to clone (e.g. owner/repo)'
        required: false
        default: hmanzur/ci-cd-tutorial-sample-app.git
        type: string

      ref:
        description: 'Git reference (branch, tag, or commit SHA)'
        required: false
        default: main
        type: string

      python_version:
          description: 'Python version to use'
          required: false
          default: '3.13'
          type: string

permissions:
  packages: write
  contents: read


jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          
      - name: ⚙️ Install system dependencies
        run: sudo apt update && sudo apt install -y libpq-dev gcc

      - name: 🐍 Set up Python Environment
        uses: getsentry/action-setup-venv@v2.1.1
        id: venv
        with:
          python-version: ${{ inputs.python_version }}
          cache-dependency-path: |
            requirements.txt
          install-cmd: pip install -r requirements.txt
          
      - name: 🛠 Run database migrations
        run: flask db upgrade

      - name: 🧪 Run unit tests
        run: |
          python seed.py 
          python -m unittest discover

  bundle: 
    name: 📦 Bundle Application
    needs:
      - test
    runs-on: ubuntu-latest
    steps: 
      - name: 🔄 Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          path: './app'
      
      - name: Get code repository name
        id: repo-name
        run: echo "CODE_REPO_NAME=$(echo ${{ inputs.repo }} | cut -d'/' -f2)" >> $GITHUB_OUTPUT


      - name: 🔐 Log in to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build & Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: './app'
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ steps.repo-name.outputs.CODE_REPO_NAME }}:${{ github.sha }}
